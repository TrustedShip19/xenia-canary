name: Create release

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
#      sha:
#        required: true
#        type: string
    secrets:
      RELEASE_TOKEN:
        required: true

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@main
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          GH_REPO: ${{ github.repository_owner }}/xenia-canary-releases
        run: |
          # REMOVE THIS v
          if [ -z "$GITHUB_SHA" ]; then
            echo "GITHUB_SHA is not set!"
            error=1
          else
            echo "GITHUB_SHA = $GITHUB_SHA"
          fi
          if [ -z "$GITHUB_REF_NAME" ]; then
            echo "GITHUB_REF_NAME is not set!"
            error=1
          else
            echo "GITHUB_REF_NAME = $GITHUB_REF_NAME"
          fi
          if [ -n "$error" ]; then
            exit 1
          fi
          # REMOVE THIS ^
          rm -rf artifacts/**/*.pdb
          case ${{ inputs.os }} in
            windows)
              asset=xenia_canary_windows.zip
              7z a $asset './xenia_canary_windows/*'
              ;;
            linux)
              chmod +x xenia_canary_linux/xenia_canary
              asset=xenia_canary_linux.tar.gz
              tar -cvpf $asset xenia_canary_linux/*
              ;;
          esac
          if stat -c%s $asset -lt 100000; then
            echo "::error::$asset is too small!"
          fi
          tag=${GITHUB_SHA::7}
          target=925ed98d5dce604b651027c36fb522dc1ff0fa55
          title="${tag}_$GITHUB_REF_NAME"
          if gh release view $tag; then
            gh release upload $tag $asset --clobber --target $target -t $GITHUB_REF_NAME
          else
            gh release create $tag $asset --target $target -t $title
          fi
          # Remove canary_ to prevent conflicts from tag
          tag=${GITHUB_REF_NAME/canary_}
          if [ -z $tag ]; then
            echo "::error::Tag is blank!"
            exit 1
          fi
          if gh release view $tag; then
            gh release upload $tag $asset --clobber --target $target -t $GITHUB_REF_NAME
          else
            gh release create $tag $asset --target $target -t $title
          fi
